#include <stdio.h>
#include <stdlib.h>

#define MAX 5  // Define the maximum size of the Circular Queue
typedef struct {
    char data[MAX];
    int front, rear, size;
} CircularQueue;
void initializeQueue(CircularQueue *q) {
	q->front = 0;
	q->rear = -1;
	q->size = 0;
}
int isFull(CircularQueue *q) {
	return (q->size == MAX);
}
int isEmpty(CircularQueue *q) {
	return (q->size == 0);
}
void insertElement(CircularQueue *q, char element) {
	if(isFull(q)){
		printf("Queue Overflow\n");
		return;
	}
	q->rear = (q->rear + 1) % MAX;
	q->data[q->rear] = element;
	q->size++;
	printf("Inserted element '%c'\n",element);
}
void deleteElement(CircularQueue *q) {
    if(isEmpty(q)){
		printf("Queue Underflow\n");
		return;
	}
	printf("Deleted element '%c'\n",q->data[q->front]);
	q->front = (q->front+1) % MAX;
	q->size--;
}
void displayStatus(CircularQueue *q) {
    if(isEmpty(q)){
		printf("Queue is empty\n");
		return ;
	}
	int i = q->front;
	int count = q->size ;
	while(count--){
		printf("%c ",q->data[i]);
		i = (i + 1) % MAX;
	}
	printf("\n");
}
int main() {
	int choice;
	char element;
	CircularQueue q;
	initializeQueue(&q);
    do {
        printf("Circular Queue Menu:\n");
        printf("1. Insert Element\n");
        printf("2. Delete Element\n");
        printf("3. Display Queue Status\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the character to insert: ");
                scanf(" %c", &element);
                insertElement(&q, element);
                break;
            case 2:
                deleteElement(&q);
                break;
            case 3:
                displayStatus(&q);
                break;
            case 4:
                printf("Exit\n");
                break;
            default:
                printf("Invalid choice\n");
                break;
        }
    } while (choice != 4);
    return 0;
}
