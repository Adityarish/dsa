#include <stdio.h>
#include <string.h>
#include <math.h>
#include <ctype.h>
#define STACK_MAX_SIZE 20

int stack[STACK_MAX_SIZE], top = -1;

int isEmpty() {
    return top == -1;
}
void push(int x) {
    stack[++top] = x;
}
int pop() { 
    return stack[top--];
}

void evaluatePostfix(char *e) {
    int res, len = strlen(e), a, b, temp;
    for (int i = 0; i < len; i++) {
        if (isdigit(e[i])) push(e[i] - '0');
        else {
            if (isEmpty()) { printf("Invalid \n"); return; }
            b = pop();
            if (isEmpty()) { printf("Invalid \n"); return; }
            a = pop();
            switch (e[i]) {
                case '+': temp = a + b; break;
                case '-': temp = a - b; break;
                case '*': temp = a * b; break;
                case '/': temp = a / b; break;
                case '^': temp = pow(a, b); break;
                case '%': temp = a % b; break;
                default: printf("Invalid postfix expression.\n"); return;
            }
            push(temp);
        }
    }
    res = pop();
    if (!isEmpty()) { printf("Invalid postfix expression.\n"); return; }
    printf("Result : %d\n", res);
}

int main() {
    char exp[20];
    printf("Enter the postfix expression : ");
    scanf("%s", exp);
    evaluatePostfix(exp);
}
